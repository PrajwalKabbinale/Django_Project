Frontend
--------------------------
auto rename tag
beautify css
intellisense for CSS
jinja


Django 
--------------------------
Jinja
prettier - code formatter
Python
Pylance
Path intellisense


Create Virtual ENV
----------------------------------------
conda create -n django_venv python=3.7  

# to list conda virtual envs
conda env list

#Activate venv
conda activate django_venv

#To deactivate 
conda deactivate


Basic Workflow - django
-----------------------------------------------------------

Client                       Server

client requests to the server
server processos the requets and provides resposne to the client

Requests using http/s protocol


webserver --> URL --> python function --> Renderer (HTML Template) --> Client
                        .
                        .
                        .
                        DB


Packages Required for Django Framework
----------------------------------------------------
python -m pip install django


Creating project
-----------------------------------------------------
django-admin startproject first_project


manage.py - helps to interact cli with the django Framework
__init__.py - module

Files we touch - 

settings.py 
- where we change database

urls.py
- provide url paths


Deployment file -
wsgi.py

asgi.py



Run server
--------------------------------
python manager.py runserver




Project Files
------------------------------------
The outer mysite/ root directory is a container for your project. Its name doesn’t matter to Django; you can rename it to anything you like.
manage.py: A command-line utility that lets you interact with this Django project in various ways. You can read all the details about manage.py in django-admin and manage.py.
The inner mysite/ directory is the actual Python package for your project. Its name is the Python package name you’ll need to use to import anything inside it (e.g. mysite.urls).
mysite/__init__.py: An empty file that tells Python that this directory should be considered a Python package. If you’re a Python beginner, read more about packages in the official Python docs.
mysite/settings.py: Settings/configuration for this Django project. Django settings will tell you all about how settings work.
mysite/urls.py: The URL declarations for this Django project; a “table of contents” of your Django-powered site. You can read more about URLs in URL dispatcher.
mysite/asgi.py: An entry-point for ASGI-compatible web servers to serve your project. See How to deploy with ASGI for more details.
mysite/wsgi.py: An entry-point for WSGI-compatible web servers to serve your project. See How to deploy with WSGI for more details.

commands:
django-admin --version
django-admin stratproject <project_name>
python manage.py runserver
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python manage.py startapp first_app